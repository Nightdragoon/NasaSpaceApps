<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - HeliOS</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/NasaSpaceAppsFront.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="assets/css/style.css" />
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;500&display=swap" rel="stylesheet">

    <style>
      /* ====== Accesibilidad base ====== */
      body.a11y-contrast{
        --bs-body-bg:#000; --bs-body-color:#fff;
        background:var(--bs-body-bg)!important; color:var(--bs-body-color)!important;
      }
      body.a11y-bigtext{ font-size:150%; }
      body.a11y-spacing{ line-height:1.8!important; letter-spacing:.02em; word-spacing:.06em; }

      /* El panel NO hereda filtros ni temas oscuros */
      #ajustesPanel, #ajustesPanel *{ filter:none!important; }
      body.a11y-contrast #ajustesPanel{
        --bs-body-bg:#fff; --bs-body-color:#212529;
        background:var(--bs-body-bg)!important; color:var(--bs-body-color)!important;
      }
      body.a11y-contrast #ajustesPanel .offcanvas-title,
      body.a11y-contrast #ajustesPanel .accordion-button{
        color:#212529!important; background:#f8f9fa!important;
      }
      body.a11y-contrast #ajustesPanel .accordion-body,
      body.a11y-contrast #ajustesPanel label,
      body.a11y-contrast #ajustesPanel .form-check-label{ color:#212529!important; }
      body.a11y-contrast #ajustesPanel .form-check-input{ border-color:#6c757d!important; }
      body.a11y-contrast #ajustesPanel .form-check-input:checked{
        background-color:#0d6efd!important; border-color:#0d6efd!important;
      }

      /* ====== Fondo principal (.background) ====== */
      .background{
        position:fixed; top:0; left:0; width:100%; height:100vh; z-index:-1;
        background:linear-gradient(180deg,#0B1226,#1E3259);
      }
      .background .overlay{ position:absolute; inset:0; pointer-events:none; }

      /* ====== Daltonismo: fondo por modo (sin filtros globales) ====== */
      body.cb-protanopia .background,
      body.cb-deuteranopia .background,
      body.cb-tritanopia .background,
      body.cb-mono .background{ filter:none; }

      /* Protanopia / Deuteranopia: azules/cian + ámbar, buen contraste */
      body.cb-protanopia .background,
      body.cb-deuteranopia .background{
        background:linear-gradient(180deg,#0a1020,#15264a)!important;
      }

      /* Tritanopia: magenta/teal */
      body.cb-tritanopia .background{
        background:linear-gradient(180deg,#120c1a,#1e1a2c)!important;
      }

      /* Monocromático: gris oscuro */
      body.cb-mono .background{
        background:linear-gradient(180deg,#0e0e0e,#1a1a1a)!important;
      }

      /* ====== Texto/links/inputs en modos CB ====== */
      body.cb-protanopia,
      body.cb-deuteranopia,
      body.cb-tritanopia,
      body.cb-mono{ color:#f2f4f8; }

      body.cb-protanopia :where(h1,h2,h3,h4,h5,h6),
      body.cb-deuteranopia :where(h1,h2,h3,h4,h5,h6),
      body.cb-tritanopia  :where(h1,h2,h3,h4,h5,h6),
      body.cb-mono        :where(h1,h2,h3,h4,h5,h6){ color:#fff; }

      /* Enlaces distinguibles por modo (sin afectar el panel) */
      body.cb-protanopia a, body.cb-deuteranopia a{ color:#7fd3ff; }
      body.cb-protanopia a:hover, body.cb-deuteranopia a:hover{ color:#b3e6ff; }
      body.cb-tritanopia a{ color:#e09bff; }  body.cb-tritanopia a:hover{ color:#f0c9ff; }
      body.cb-mono a{ color:#e6e6e6; }        body.cb-mono a:hover{ color:#ffffff; }

      /* Formularios legibles */
      body[class*="cb-"] .form-control,
      body[class*="cb-"] .form-select,
      body[class*="cb-"] textarea{
        background:#111!important; color:#fff!important; border-color:#777!important;
      }
      body[class*="cb-"] .form-control::placeholder{ color:#bbb; }

      /* Utilidades Bootstrap que podían “forzar” blanco/negro */
      body[class*="cb-"] .text-white{ color:#f2f4f8!important; }
      body[class*="cb-"] .text-dark{ color:#e6e9ef!important; }
      body[class*="cb-"] .bg-black{ background:#111!important; }
      body[class*="cb-"] .bg-dark{ background:#121621!important; }

      /* Botones outline con contraste en CB */
      body[class*="cb-"] .btn-outline-secondary{
        color:#fff!important; border-color:#fff!important;
      }
      body[class*="cb-"] .btn-outline-secondary:hover{
        background:#fff!important; color:#000!important;
      }

      /* ====== Planeta (soporta .planet-img Y .hero-bottom-img) ====== */
      body.cb-protanopia .planet-img,
      body.cb-deuteranopia .planet-img,
      body.cb-protanopia .hero-bottom-img,
      body.cb-deuteranopia .hero-bottom-img{
        filter:hue-rotate(-10deg) saturate(.9) contrast(1.07) brightness(1.05);
      }
      body.cb-tritanopia .planet-img,
      body.cb-tritanopia .hero-bottom-img{
        filter:hue-rotate(170deg) saturate(.85) contrast(1.07) brightness(1.05);
      }
      body.cb-mono .planet-img,
      body.cb-mono .hero-bottom-img{
        filter:grayscale(100%) contrast(1.12) brightness(1.06);
      }

      /* ====== Si combinan CB + Alto contraste, prioriza legibilidad ====== */
      body.a11y-contrast.cb-protanopia,
      body.a11y-contrast.cb-deuteranopia,
      body.a11y-contrast.cb-tritanopia,
      body.a11y-contrast.cb-mono{ color:#fff; }
      body.a11y-contrast[class*="cb-"] a{ text-decoration:underline; }

      /* ===== Mantener legible el PANEL en cualquier modo de daltonismo ===== */
body[class*="cb-"] #ajustesPanel,
body[class*="cb-"] #ajustesPanel * { filter: none !important; }

body[class*="cb-"] #ajustesPanel {
  /* Forzamos tema claro SOLO dentro del panel */
  --bs-body-bg:#fff;
  --bs-body-color:#212529;
  background:#fff !important;
  color:#212529 !important;
}

/* Encabezado del offcanvas y botones del acordeón */
body[class*="cb-"] #ajustesPanel .offcanvas-title,
body[class*="cb-"] #ajustesPanel .accordion-button {
  color:#212529 !important;
  background:#f8f9fa !important;
}

/* Texto de contenidos y etiquetas */
body[class*="cb-"] #ajustesPanel .accordion-body,
body[class*="cb-"] #ajustesPanel label,
body[class*="cb-"] #ajustesPanel .form-check-label {
  color:#212529 !important;
}

/* Radios/checkbox legibles */
body[class*="cb-"] #ajustesPanel .form-check-input {
  background:#fff !important;        /* evita verse “apagado” */
  border-color:#6c757d !important;
}
body[class*="cb-"] #ajustesPanel .form-check-input:checked {
  background-color:#0d6efd !important;
  border-color:#0d6efd !important;
}

/* Enlaces dentro del panel (si los hay) */
body[class*="cb-"] #ajustesPanel a {
  color:#0d6efd !important;
}
body[class*="cb-"] #ajustesPanel a:hover {
  color:#0b5ed7 !important;
}

    </style>

    @RenderSection("Styles", required: false)
</head>
<body>
    <header>
      <div class="d-flex justify-content-end p-2 gap-2">
        <button class="btn btn-outline-light"
                data-bs-toggle="offcanvas" data-bs-target="#ajustesPanel"
                aria-controls="ajustesPanel">Ajustes</button>

        @* Solo se muestra si el usuario inició sesión *@
        @if (User?.Identity?.IsAuthenticated ?? false)
        {
            <a class="btn btn-outline-light"
               asp-controller="Account" asp-action="Historial">
               Historial
            </a>
        }
      </div>
    </header>

    <div class="container">
      <main role="main" class="pb-3">
        @RenderBody()
      </main>
    </div>

    <!-- Panel de Ajustes -->
    <div class="offcanvas offcanvas-end" tabindex="-1" id="ajustesPanel" aria-labelledby="ajustesTitle">
      <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="ajustesTitle">Configuración de accesibilidad</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Cerrar"></button>
      </div>
      <div class="offcanvas-body">
        <div class="accordion" id="ajustesAccordion">

          <div class="accordion-item">
            <h2 class="accordion-header" id="hdrVision">
              <button class="accordion-button" type="button" data-bs-toggle="collapse"
                      data-bs-target="#colVision" aria-expanded="true" aria-controls="colVision">
                Visión y contraste
              </button>
            </h2>
            <div id="colVision" class="accordion-collapse collapse show" data-bs-parent="#ajustesAccordion">
              <div class="accordion-body">
                <div class="form-check mb-2">
                  <input class="form-check-input" type="checkbox" id="highContrast">
                  <label class="form-check-label" for="highContrast">Alto contraste</label>
                </div>
                <div class="form-check mb-2">
                  <input class="form-check-input" type="checkbox" id="bigText">
                  <label class="form-check-label" for="bigText">Texto grande (150%)</label>
                </div>
                <div class="form-check mb-2">
                  <input class="form-check-input" type="checkbox" id="extraSpacing">
                  <label class="form-check-label" for="extraSpacing">Espaciado adicional</label>
                </div>
              </div>
            </div>
          </div>

          <div class="accordion-item">
            <h2 class="accordion-header" id="hdrDaltonismo">
              <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                      data-bs-target="#colDaltonismo" aria-expanded="false" aria-controls="colDaltonismo">
                Daltonismo
              </button>
            </h2>
            <div id="colDaltonismo" class="accordion-collapse collapse" data-bs-parent="#ajustesAccordion">
              <div class="accordion-body">
                <div class="form-check">
                  <input class="form-check-input" type="radio" name="cbMode" value="none" id="cbNone" checked>
                  <label class="form-check-label" for="cbNone">Normal</label>
                </div>
                <div class="form-check">
                  <input class="form-check-input" type="radio" name="cbMode" value="protanopia" id="cbPro">
                  <label class="form-check-label" for="cbPro">Protanopia</label>
                </div>
                <div class="form-check">
                  <input class="form-check-input" type="radio" name="cbMode" value="deuteranopia" id="cbDeu">
                  <label class="form-check-label" for="cbDeu">Deuteranopia</label>
                </div>
                <div class="form-check">
                  <input class="form-check-input" type="radio" name="cbMode" value="tritanopia" id="cbTri">
                  <label class="form-check-label" for="cbTri">Tritanopia</label>
                </div>
                <div class="form-check">
                  <input class="form-check-input" type="radio" name="cbMode" value="mono" id="cbMono">
                  <label class="form-check-label" for="cbMono">Monocromático</label>
                </div>
              </div>
            </div>
          </div>

        </div>

        <hr class="my-3">
        <div class="d-flex justify-content-end gap-2">
          <button id="a11yReset" class="btn btn-light">Restablecer</button>
          <button id="a11ySave"  class="btn btn-primary" data-bs-dismiss="offcanvas">Guardar</button>
        </div>
      </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
      (() => {
        const b = document.body;
        const $ = (s, r=document) => r.querySelector(s);
        const $$ = (s, r=document) => Array.from(r.querySelectorAll(s));
        const KEY = 'a11y-settings-v1';

        const highContrast = $('#highContrast');
        const bigText      = $('#bigText');
        const extraSpacing = $('#extraSpacing');
        const cbModes      = $$('input[name="cbMode"]');
        const btnSave      = $('#a11ySave');
        const btnReset     = $('#a11yReset');

        const state = { contrast:false, bigText:false, spacing:false, cbMode:'none' };

        function load(){ try{ Object.assign(state, JSON.parse(localStorage.getItem(KEY))||{});}catch{} }
        function save(){ localStorage.setItem(KEY, JSON.stringify(state)); }
        function apply(){
          b.classList.toggle('a11y-contrast', state.contrast);
          b.classList.toggle('a11y-bigtext',  state.bigText);
          b.classList.toggle('a11y-spacing',  state.spacing);
          b.classList.remove('cb-protanopia','cb-deuteranopia','cb-tritanopia','cb-mono');
          if(state.cbMode !== 'none') b.classList.add(`cb-${state.cbMode}`);
        }
        function sync(){
          if(!highContrast) return;
          highContrast.checked = state.contrast;
          bigText.checked      = state.bigText;
          extraSpacing.checked = state.spacing;
          (cbModes.find(r=>r.value===state.cbMode)||cbModes[0]).checked = true;
        }

        highContrast?.addEventListener('change', ()=> state.contrast = highContrast.checked);
        bigText?.addEventListener('change',      ()=> state.bigText  = bigText.checked);
        extraSpacing?.addEventListener('change', ()=> state.spacing  = extraSpacing.checked);
        cbModes.forEach(r => r.addEventListener('change', ()=> { if(r.checked) state.cbMode = r.value; }));

        btnSave?.addEventListener('click', ()=> { save(); apply(); });
        btnReset?.addEventListener('click', ()=> {
          Object.assign(state, {contrast:false,bigText:false,spacing:false,cbMode:'none'});
          save(); sync(); apply();
        });

        load(); sync(); apply();
      })();
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
